<Activity mc:Ignorable="sap sap2010 sads" x:Class="bpIRZ_prj_KPA.Activity2"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:hwa="clr-namespace:Hhi.WWF.ActivityLibrary;assembly=Hhi.WWF.ActivityLibrary"
 xmlns:hwea="clr-namespace:Hhi.WWF.Engine.AmberAPI;assembly=Hhi.WWF.Engine.AmberAPI"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="SysUserId" Type="InArgument(x:Int32)" />
    <x:Property Name="SysInstanceId" Type="InArgument(x:Int32)" />
    <x:Property Name="SysObjectCode" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>bpIRZ_prj_KPA.Activity1_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>Hhi.WWF.Engine.AmberAPI</x:String>
      <x:String>Hhi.WWF.ActivityLibrary</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Hhi.WWF.ActivityLibrary</AssemblyReference>
      <AssemblyReference>Hhi.WWF.Engine.AmberAPI</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>bpIRZ_prj_KPA</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>bpIRZ_prj_Tasks</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="Project BP - First task creation" sap2010:WorkflowViewState.IdRef="Flowchart_5">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:Int32" Name="OwnerId" />
      <Variable x:TypeArguments="scg:IReadOnlyCollection(hwa:IRow)" Name="ProjectStatusInfo" />
      <Variable x:TypeArguments="scg:IReadOnlyCollection(hwa:IRow)" Name="ProjectStagesInfo" />
      <Variable x:TypeArguments="x:String" Name="BPCode" />
      <Variable x:TypeArguments="scg:IReadOnlyCollection(hwa:IRow)" Name="TaskList" />
      <Variable x:TypeArguments="x:Int32" Name="TaskId" />
      <Variable x:TypeArguments="x:Int32" Name="FirstTaskId" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_59">
        <Sequence DisplayName="Get project OwnerId and BPCode" sap2010:WorkflowViewState.IdRef="Sequence_17">
          <Sequence.Variables>
            <Variable x:TypeArguments="scg:IReadOnlyCollection(hwa:IRow)" Name="ProjectInfo" />
          </Sequence.Variables>
          <hwa:Select DisplayName="(S) Load ProjectInfo" sap2010:WorkflowViewState.IdRef="Select_10" Limit="Single" Query="select &#xA;a.Owner as Owner, &#xD;&#xA;a.FirstTask as FirstTaskId,&#xA;b.Code as BPCode&#xA;from &#xA;Projects a left join &#xA;ProjectBPs b on a.BPName = b.id&#xA;where a.Id = @ProjectId">
            <hwa:Select.Params>
              <InArgument x:TypeArguments="scg:IReadOnlyDictionary(hwea:Code, x:Object)">
                <mca:CSharpValue x:TypeArguments="scg:IReadOnlyDictionary(hwea:Code, x:Object)" xml:space="preserve">new Dictionary&lt;Code, object&gt;()
            {
                { "@ProjectId", SysInstanceId }
            }</mca:CSharpValue>
              </InArgument>
            </hwa:Select.Params>
            <hwa:Select.Result>
              <OutArgument x:TypeArguments="scg:IReadOnlyCollection(hwa:IRow)">
                <mca:CSharpReference x:TypeArguments="scg:IReadOnlyCollection(hwa:IRow)">ProjectInfo</mca:CSharpReference>
              </OutArgument>
            </hwa:Select.Result>
          </hwa:Select>
          <Assign DisplayName="Assign OwnerId" sap2010:WorkflowViewState.IdRef="Assign_11">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">
                <mca:CSharpReference x:TypeArguments="x:Int32">OwnerId</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">
                <mca:CSharpValue x:TypeArguments="x:Int32">(int)ProjectInfo.Single()["Owner"]</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign BPCode" sap2010:WorkflowViewState.IdRef="Assign_12">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">BPCode</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">ProjectInfo.Single()["BPCode"] == null ? "pbpNone" : (string)ProjectInfo.Single()["BPCode"]</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign FirstTaskId" sap2010:WorkflowViewState.IdRef="Assign_13">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">
                <mca:CSharpReference x:TypeArguments="x:Int32">FirstTaskId</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">
                <mca:CSharpValue x:TypeArguments="x:Int32">BPCode != "pbpCommon" || ProjectInfo.Single()["FirstTaskId"] == null ? 0 : (int)ProjectInfo.Single()["FirstTaskId"]</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
        <FlowStep.Next>
          <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_58">
            <Sequence DisplayName="Load refBooks" sap2010:WorkflowViewState.IdRef="Sequence_18">
              <hwa:Select DisplayName="(S)Load ProjectStatus" sap2010:WorkflowViewState.IdRef="Select_11" Query="select Code, Id&#xA;from ProjectStatus&#xA;where Code='soSuccessful' or Code ='soFailed' or Code = 'soActive'">
                <hwa:Select.Result>
                  <OutArgument x:TypeArguments="scg:IReadOnlyCollection(hwa:IRow)">
                    <mca:CSharpReference x:TypeArguments="scg:IReadOnlyCollection(hwa:IRow)">ProjectStatusInfo</mca:CSharpReference>
                  </OutArgument>
                </hwa:Select.Result>
              </hwa:Select>
              <hwa:Select DisplayName="(S)Load ProjectStage (Probability)" sap2010:WorkflowViewState.IdRef="Select_12" Query="select Id, Code, Name, Probability&#xA;from ProjectStage">
                <hwa:Select.Result>
                  <OutArgument x:TypeArguments="scg:IReadOnlyCollection(hwa:IRow)">
                    <mca:CSharpReference x:TypeArguments="scg:IReadOnlyCollection(hwa:IRow)">ProjectStagesInfo</mca:CSharpReference>
                  </OutArgument>
                </hwa:Select.Result>
              </hwa:Select>
            </Sequence>
            <FlowStep.Next>
              <FlowDecision x:Name="__ReferenceID4" DisplayName="Is BP project?" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                <FlowDecision.Condition>
                  <mca:CSharpValue x:TypeArguments="x:Boolean">BPCode != "pbpNone"</mca:CSharpValue>
                </FlowDecision.Condition>
                <FlowDecision.True>
                  <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_57">
                    <hwa:Select DisplayName="(S) Load next tasks templates" sap2010:WorkflowViewState.IdRef="Select_13" Query="select &#xA;&#xA;a.Code as Code,&#xA;a.TaskOrder as TaskOrder,&#xA;a.Name as Name, &#xA;a.Duration as Duration,&#xA;a.CloseReasonByDefault as CloseReasonByDefault,&#xA;c.Code as Type,&#xA;a.Probability as Probability,&#xA;pa.Id as ProjectAffectingId,&#xA;pa.Code as ProjectAffecting&#xA;&#xA;from &#xA;BPTemplates a&#xA;join ProjectBPs b on a.BPCode = b.Id&#xA;join TaskType c on a.Type = c.Id&#xA;join BPTask_ProjectAffecting pa on a.ProjectAffecting = pa.Id&#xA;&#xA;where b.Code = @BPCode and ( @FirstTaskId = 0 and a.TaskOrder = 1 or a.Id = @FirstTaskId )">
                      <hwa:Select.Params>
                        <InArgument x:TypeArguments="scg:IReadOnlyDictionary(hwea:Code, x:Object)">
                          <mca:CSharpValue x:TypeArguments="scg:IReadOnlyDictionary(hwea:Code, x:Object)" xml:space="preserve">new Dictionary&lt;Code, object&gt;()
            {
                { "@BPCode", BPCode },
                { "@FirstTaskId", FirstTaskId }
            }</mca:CSharpValue>
                        </InArgument>
                      </hwa:Select.Params>
                      <hwa:Select.Result>
                        <OutArgument x:TypeArguments="scg:IReadOnlyCollection(hwa:IRow)">
                          <mca:CSharpReference x:TypeArguments="scg:IReadOnlyCollection(hwa:IRow)">TaskList</mca:CSharpReference>
                        </OutArgument>
                      </hwa:Select.Result>
                    </hwa:Select>
                    <FlowStep.Next>
                      <FlowDecision x:Name="__ReferenceID6" DisplayName="Is any exists?" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                        <FlowDecision.Condition>
                          <mca:CSharpValue x:TypeArguments="x:Boolean">TaskList.Count() &gt; 0</mca:CSharpValue>
                        </FlowDecision.Condition>
                        <FlowDecision.True>
                          <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_56">
                            <hwa:Update DisplayName="(U)ProjectStatus='soActive'; P from first task" sap2010:WorkflowViewState.IdRef="Update_8" Query="update Projects &#xA;set &#xA;Status = @ProjectStatus_Active,&#xA;Probability = @Probability,&#xA;ProjectCloseDate = Null,&#xA;ZapushhenBP = 1&#xA;where Id = @ProjectId">
                              <hwa:Update.Params>
                                <InArgument x:TypeArguments="scg:IReadOnlyDictionary(hwea:Code, x:Object)">
                                  <mca:CSharpValue x:TypeArguments="scg:IReadOnlyDictionary(hwea:Code, x:Object)" xml:space="preserve">new Dictionary&lt;Code, Object&gt;()
            {
                {"@ProjectStatus_Active", (int)ProjectStatusInfo.Where(Row =&gt; (string)Row["Code"] == "soActive").Single()["Id"] },                
                {"@Probability", (int)TaskList.First()["Probability"] },
                {"@ProjectId", SysInstanceId }
            }</mca:CSharpValue>
                                </InArgument>
                              </hwa:Update.Params>
                            </hwa:Update>
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID7" sap2010:WorkflowViewState.IdRef="FlowStep_55">
                                <ParallelForEach x:TypeArguments="hwa:IRow" DisplayName="Create first step tasks (parallel)" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_1">
                                  <ParallelForEach.Values>
                                    <InArgument x:TypeArguments="scg:IEnumerable(hwa:IRow)">
                                      <mca:CSharpValue x:TypeArguments="scg:IEnumerable(hwa:IRow)">TaskList</mca:CSharpValue>
                                    </InArgument>
                                  </ParallelForEach.Values>
                                  <ActivityAction x:TypeArguments="hwa:IRow">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="hwa:IRow" Name="item" />
                                    </ActivityAction.Argument>
                                    <hwa:Task DisplayName="Create task" sap2010:WorkflowViewState.IdRef="Task_12" StatusTask="tsInWork">
                                      <hwa:Task.Dependency>
                                        <InArgument x:TypeArguments="scg:IReadOnlyDictionary(hwea:Code, x:Object)">
                                          <mca:CSharpValue x:TypeArguments="scg:IReadOnlyDictionary(hwea:Code, x:Object)" xml:space="preserve">new Dictionary&lt;Code, object&gt;()
            {
                { "Project", SysInstanceId },
                { "CloseReasonByDefault", (string)item["CloseReasonByDefault"] },
                { "Process", BPCode },
                { "ProcessStep", (string)item["Code"] },
                { "ProjectAffecting", (int)item["ProjectAffectingId"] },
                { "DaysToDueDate", -(int)item["Duration"] }
            }</mca:CSharpValue>
                                        </InArgument>
                                      </hwa:Task.Dependency>
                                      <hwa:Task.Duration>
                                        <InArgument x:TypeArguments="x:TimeSpan">
                                          <mca:CSharpValue x:TypeArguments="x:TimeSpan">new TimeSpan((int)item["Duration"], 0, 0, 0)</mca:CSharpValue>
                                        </InArgument>
                                      </hwa:Task.Duration>
                                      <hwa:Task.Name>
                                        <InArgument x:TypeArguments="x:String">
                                          <mca:CSharpValue x:TypeArguments="x:String">(string)item["Name"]</mca:CSharpValue>
                                        </InArgument>
                                      </hwa:Task.Name>
                                      <hwa:Task.Owner>
                                        <InArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpValue x:TypeArguments="x:Int32">OwnerId</mca:CSharpValue>
                                        </InArgument>
                                      </hwa:Task.Owner>
                                      <hwa:Task.TaskId>
                                        <OutArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpReference x:TypeArguments="x:Int32">TaskId</mca:CSharpReference>
                                        </OutArgument>
                                      </hwa:Task.TaskId>
                                      <hwa:Task.TaskTarget>
                                        <InArgument x:TypeArguments="x:String">
                                          <mca:CSharpValue x:TypeArguments="x:String">(string)item["Name"]</mca:CSharpValue>
                                        </InArgument>
                                      </hwa:Task.TaskTarget>
                                      <hwa:Task.TypeTask>
                                        <InArgument x:TypeArguments="x:String">
                                          <mca:CSharpValue x:TypeArguments="x:String">(string)item["Type"]</mca:CSharpValue>
                                        </InArgument>
                                      </hwa:Task.TypeTask>
                                    </hwa:Task>
                                  </ActivityAction>
                                </ParallelForEach>
                                <FlowStep.Next>
                                  <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_54">
                                    <hwa:Script SharpCode="{x:Null}" DisplayName="Finish 'bpIRZ_prj_FirstTask'" sap2010:WorkflowViewState.IdRef="Script_2" />
                                  </FlowStep>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowDecision.True>
                        <FlowDecision.False>
                          <x:Reference>__ReferenceID0</x:Reference>
                        </FlowDecision.False>
                      </FlowDecision>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowDecision.True>
                <FlowDecision.False>
                  <x:Reference>__ReferenceID0</x:Reference>
                </FlowDecision.False>
              </FlowDecision>
            </FlowStep.Next>
          </FlowStep>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <sads:DebugSymbol.Symbol>d1REOlx+UHJvamVjdHNcQW1iZXJcQW1iZXJJUlpfQWN0aXZpdHlMaWJyYXJ5XGJwSVJaX3Byal9UYXNrc1xicElSWl9wcmpfRmlyc3RUYXNrLnhhbWwmNAORAg8CAQFACXcUAwG3AXoNiQEYAwGeAY0BE40BZQMBkwHxASXxAZ4BAwGSAZEBFaABIgIBe6QBG6QBcQIBcKgBHbMBKgIBZLYBIe4BMwIBAkQLUhgDAYMCUwteFAMB6gFfC2oUAwHRAWsLdhQDAbgBew+BARwDAasBggEPiAEcAwGfAZQBG5gBIAMBhwGdARudAYIBAgF8qwEjsAEgAgFluQEnuQF+AgFZwAEl7AEwAgEDRxFKIAMBkAJPEU97AwGEAlsRW3ADAfcBVhFWXQMB6wFnEWeqAQMB3gFiEWJdAwHSAXMRc8EBAwHFAW4RbmEDAbkBfhV+hQEDAawBhQEVhQGFAQMBoAHpASvpAX0CAU3aASvaAW8CAUHkASvkAX0CATXfASvfAXYCASnAAX7AAYgBAgEowwErywEgAgEc1QEr1QF9AgEQ0AEr0AGXAQIBBA==</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Select_10" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="244,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Select_11" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Select_12" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="244,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Select_13" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Update_8" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Task_12" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ParallelForEach`1_1" sap:VirtualizedContainerService.HintSize="244,51" />
      <sap2010:ViewStateData Id="Script_2" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_54">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">290,819</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_55">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">28,664.5</av:Point>
            <av:Size x:Key="ShapeSize">244,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">150,715.5 150,745.5 390,745.5 390,819</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_56">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">50,609</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">150,631 150,664.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">175,456.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">175,500 150,500 150,609</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">245,500 390,500 390,819</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_57">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">110,409</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">210,431 210,456.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_2" sap:VirtualizedContainerService.HintSize="74,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">343,286.5</av:Point>
            <av:Size x:Key="ShapeSize">74,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">417,330 447,330 447,789 390,789 390,819</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">343,330 210,330 210,409</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_58">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">258,214.5</av:Point>
            <av:Size x:Key="ShapeSize">244,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">380,265.5 380,286.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">258,124.5</av:Point>
            <av:Size x:Key="ShapeSize">244,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">380,175.5 380,214.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_5" sap:VirtualizedContainerService.HintSize="1034,2227">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">350,12.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">380,87.5 380,124.5</av:PointCollection>
            <x:Double x:Key="Width">1020</x:Double>
            <x:Double x:Key="Height">2191</x:Double>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="bpIRZ_prj_KPA.Activity1_1" sap:VirtualizedContainerService.HintSize="1074,2307" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>